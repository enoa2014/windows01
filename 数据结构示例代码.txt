# -*- coding: utf-8 -*-
import json

def get_patient_data_structure():
    """
    此函数返回一个示例列表，其中每个元素都是一个代表患儿档案的字典。
    这种嵌套的字典结构能够清晰地反映 Excel 文件中通过表头分组的逻辑关系，
    使得数据在程序中更易于访问和管理。
    """
    patient_records = [
        {
            "序号": 1,
            "基本信息": {
                "姓名": "胡矩豪",
                "性别": "男",
                "出生日期": "2014.3.27",
                "籍贯": "中国",
                "民族": "汉",
                "身份证号": "450921201403271215"
            },
            "入住信息": {
                "入住时间": "2020.6.3",
                "入住人": "胡矩豪、黄丽华"
            },
            "医疗情况": {
                "就诊医院": "广西自治区人民医院",
                "医院诊断": "急性淋巴细胞白血病阳性",
                "医生姓名": "代艳",
                "症状详情": "已进入维持辽，定期返院复查",
                "医治过程": "2017年发病，化疗用药时间一年半，现在维持口服用药，只需定期返院复查",
                "后续治疗安排": "已经化疗结束，现在维持口服化疗药物，定期回院复查"
            },
            "家庭情况": {
                "家庭地址": "广西玉林容县石寨镇石寨村塘排队",
                # 对于复合信息，最好解析成独立的键值对
                "父亲信息": {
                    "姓名": "胡斌",
                    "电话": "15278506397",
                    "身份证号": "452525197910271216"
                },
                "母亲信息": {
                    "姓名": "黄丽华",
                    "电话": "18269257505",
                    "身份证号": "452525198024280427" # 原始数据中的身份证号可能存在格式问题，此处仅做示例
                },
                "其他监护人": None, # 原始数据为空，用 None 表示
                "家庭经济": "父亲打散工，每月一千多，母亲在家照顾小孩"
            }
        },
        # 可以在此列表后继续添加从 Excel 读取的其他记录...
        {
            "序号": 2,
            "基本信息": {
                "姓名": "李业铭",
                "性别": "男",
                "出生日期": "2016.6.15",
                "籍贯": "广西梧州",
                "民族": "汉",
                "身份证号": "45048120160615023X" # 示例数据
            },
            # ... 其他字段为了保持示例简洁而省略
        }
    ]
    return patient_records

if __name__ == '__main__':
    # 获取并打印示例数据
    records = get_patient_data_structure()
    
    # 打印第一条记录的详细信息，以展示数据结构的清晰性
    print("--- 示例数据结构 (第一条记录) ---")
    # 使用 json.dumps 可以美化输出，特别是在处理中文字符时
    print(json.dumps(records[0], indent=4, ensure_ascii=False))

    # 演示如何方便地访问嵌套后的数据
    print("\n--- 数据访问示例 ---")
    first_patient_name = records[0]["基本信息"]["姓名"]
    father_phone = records[0]["家庭情况"]["父亲信息"]["电话"]
    diagnosis = records[0]["医疗情况"]["医院诊断"]
    
    print(f"第一位患儿姓名: {first_patient_name}")
    print(f"诊断结果: {diagnosis}")
    print(f"其父亲联系电话: {father_phone}")
